[1mdiff --git a/src/main/java/revsyncghidra/RevSyncGhidraPlugin.java b/src/main/java/revsyncghidra/RevSyncGhidraPlugin.java[m
[1mindex 53d22f9..c1c9e5b 100644[m
[1m--- a/src/main/java/revsyncghidra/RevSyncGhidraPlugin.java[m
[1m+++ b/src/main/java/revsyncghidra/RevSyncGhidraPlugin.java[m
[36m@@ -35,6 +35,7 @@[m [mimport ghidra.program.util.ProgramChangeRecord;[m
 import ghidra.util.Msg;[m
 import ghidra.util.exception.DuplicateNameException;[m
 import ghidra.util.exception.InvalidInputException;[m
[32m+[m[32mimport revsyncghidra.Comments.NoChange;[m
 [m
 //@formatter:off[m
 @PluginInfo([m
[36m@@ -54,10 +55,16 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 	private DockingAction loadRevsyncAction;[m
 	private DockingAction stopRevsyncAction;[m
 	private ConsoleService console;[m
[32m+[m	[32mprotected Listing listing;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic RevsyncConfig config;[m
[32m+[m	[32mpublic RevsyncClient client;[m
[32m+[m	[32mprivate Comments comments;[m
[32m+[m	[32mprivate int transactionID;[m
[32m+[m	[32mprivate Object lock = new Object();[m
 [m
 	public String fhash;[m
 [m
[31m-//    public Comments comments;[m
 	public static String[] ghidra_reserved_prefix = { "SUB_", "FUN_", "locret_", "LOC_", "off_", "seg_", "asc_",[m
 			"byte_", "word_", "dword_", "qword_", "byte3_", "xmmword_", "ymmword_", "packreal_", "flt_", "dbl_",[m
 			"tbyte_", "stru_", "custdata_", "algn_", "unk_" };[m
[36m@@ -72,12 +79,6 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 		return addr + currentProgram.getImageBase().getOffset();[m
 	}[m
 	[m
[31m-	public RevsyncConfig config;[m
[31m-	public RevsyncClient client;[m
[31m-	private Comments comments;[m
[31m-	private int transactionID;[m
[31m-	private Object lock = new Object();[m
[31m-[m
 	/**[m
 	 * Plugin constructor.[m
 	 * [m
[36m@@ -142,11 +143,51 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 				|| ev.containsEvent(ChangeManager.DOCR_REPEATABLE_COMMENT_CREATED)[m
 				|| ev.containsEvent(ChangeManager.DOCR_REPEATABLE_COMMENT_ADDED)[m
 				|| ev.containsEvent(ChangeManager.DOCR_REPEATABLE_COMMENT_DELETED)) {[m
[32m+[m			[32mconsolePrint("Got " + String.valueOf(ev.numRecords()) + " records");[m[41m [m
 			for (int i = 0; i < ev.numRecords(); i++) {[m
 				DomainObjectChangeRecord record = ev.getChangeRecord(i);[m
 				if (record instanceof ProgramChangeRecord) {[m
 					ProgramChangeRecord r = (ProgramChangeRecord) record;[m
[32m+[m					[32m// ignoring all comments except default EOL comments right now[m
[32m+[m[41m					[m
[32m+[m					[32mif (r.getEventType() == ChangeManager.DOCR_EOL_COMMENT_CHANGED) {[m
[32m+[m						[32mconsolePrint("In if claus");[m
[32m+[m[41m						[m
[32m+[m						[32mAddress ea = r.getStart();[m
[32m+[m						[32mString userText = (String)r.getNewValue();[m
[32m+[m						[32mif (userText == null || (userText != null && userText.isBlank())) {[m
[32m+[m							[32muserText = "";[m
[32m+[m						[32m}[m
[32m+[m						[32mtry {[m
[32m+[m							[32muserText = comments.parse_comment_update(ea, client.nick, userText);[m
[32m+[m						[32m}[m
[32m+[m						[32mcatch (NoChange e) {[m
[32m+[m							[32mconsolePrint("Caught no change");[m
[32m+[m							[32mcontinue;[m
[32m+[m						[32m}[m
[32m+[m						[32mString fullCmtText = comments.set(ea, client.nick, userText, client.serverTimeSec());[m
[32m+[m						[32msynchronized(lock) {[m
[32m+[m							[32mstartTransaction();[m
[32m+[m[32m//							listing.clearComments(ea, ea); // maybe keep, maybe take out[m
[32m+[m							[32mlisting.setComment(ea, CodeUnit.EOL_COMMENT, fullCmtText);[m
[32m+[m							[32mendTransaction(true);[m
[32m+[m						[32m}[m
[32m+[m[41m						[m
[32m+[m						[32mTreeMap<String,Object> data = new TreeMap<String,Object>();[m
[32m+[m						[32mLong can_addr = get_can_addr(ea);[m
[32m+[m						[32mdata.put("cmd", "comment");[m
[32m+[m						[32mdata.put("addr", can_addr);[m
[32m+[m						[32mdata.put("text", userText);[m
[32m+[m						[32mclient.publish(data);[m
[32m+[m					[32m}[m
[32m+[m[41m					[m
 					consolePrint("DEBUG comment changed: " + r.toString());[m
[32m+[m					[32mconsolePrint("DEBUG commentAddress = " + r.getStart().toString());[m
[32m+[m					[32mconsolePrint("DEBUG commentAddressType = " + r.getStart().getClass());[m
[32m+[m					[32mif (r.getObject() != null){[m
[32m+[m						[32mconsolePrint("DEBUG commentChangeObjectClass = " + r.getObject().getClass());[m
[32m+[m						[32mconsolePrint("DEBUG commentChangedObject = " + r.getObject().toString());[m
[32m+[m					[32m}[m
 				}[m
 			}[m
 		}[m
[36m@@ -238,7 +279,7 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 		}[m
 		currentProgram.addListener(this); // resume hooking changes[m
 	}[m
[31m-	[m
[32m+[m
 	private void updateSymbol(Address ea, String text) {[m
 		SymbolTable symbolTable = currentProgram.getSymbolTable();[m
 		Symbol sym = symbolTable.getPrimarySymbol(ea);[m
[36m@@ -279,7 +320,6 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 		String cmd = (String) data.get("cmd");[m
 		String user = (String) data.get("user");[m
 		Long ts = ((Double) data.get("ts")).longValue();[m
[31m-		Listing listing = currentProgram.getListing();[m
 [m
 		if (cmd == null) {[m
 			consolePrint("Error - no cmd in message");[m
[36m@@ -290,7 +330,7 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 			String text = comments.set(ea, user, (String)data.get("text"), ts);[m
 			synchronized(lock) {[m
 				startTransaction();[m
[31m-				listing.clearComments(ea, ea); // maybe keep, maybe take out[m
[32m+[m[32m//				listing.clearComments(ea, ea); // maybe keep, maybe take out[m
 				listing.setComment(ea, CodeUnit.EOL_COMMENT, text); // EOL is "default" comment[m
 				endTransaction(true);[m
 			}[m
[36m@@ -339,6 +379,7 @@[m [mpublic class RevSyncGhidraPlugin extends ProgramPlugin implements DomainObjectLi[m
 	protected void programActivated(Program program) {[m
 		Msg.info(this, "opened");[m
 		console = tool.getService(ConsoleService.class);[m
[32m+[m		[32mlisting = currentProgram.getListing();[m
 		loadRevsyncAction.setEnabled(program != null);[m
 		fhash = program.getExecutableSHA256().toUpperCase();[m
 	}[m
[1mdiff --git a/src/main/java/revsyncghidra/RevsyncClient.java b/src/main/java/revsyncghidra/RevsyncClient.java[m
[1mindex b82a891..b36e3f2 100644[m
[1m--- a/src/main/java/revsyncghidra/RevsyncClient.java[m
[1m+++ b/src/main/java/revsyncghidra/RevsyncClient.java[m
[36m@@ -263,7 +263,7 @@[m [mpublic class RevsyncClient {[m
 	protected Vector<Vector<Object>> nosend = new Vector<Vector<Object>>();[m
 	final protected Object lock = new Object();[m
 [m
[31m-	protected long serverTime() {[m
[32m+[m	[32mpublic long serverTime() {[m
 		List<String> ll;[m
 		synchronized (lock) {[m
 			ll = jedisGen.time();[m
[36m@@ -271,7 +271,7 @@[m [mpublic class RevsyncClient {[m
 		return (Long.parseLong(ll.get(0)) * 1000) + (Long.parseLong(ll.get(1)) / 1000);[m
 	}[m
 [m
[31m-	protected long serverTimeSec() {[m
[32m+[m	[32mpublic long serverTimeSec() {[m
 		List<String> ll;[m
 		synchronized (lock) {[m
 			ll = jedisGen.time();[m
